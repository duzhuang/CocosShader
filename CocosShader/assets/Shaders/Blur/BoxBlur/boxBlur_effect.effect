// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        blurOffset: {value: [0.01,0.01] }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;
    
    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;
  in vec2 v_uv0;
  uniform sampler2D texture;

  uniform BOXBLURPARAMS{
    vec2 blurOffset;
  };

  vec4 BoxBlur(vec4 mainColor,vec2 uv){
    vec4 dir = vec4(1.0,1.0,-1.0,0.0)* blurOffset.xyxy;
    //权重为2.0
    vec4 s1 = texture2D(texture, uv + dir.xw)*2.0;
    vec4 s2 = texture2D(texture, uv + dir.zw)*2.0;
    vec4 s3 = texture2D(texture, uv + dir.wy)*2.0;
    vec4 s4 = texture2D(texture, uv + dir.zw)*2.0;
    //权重为1.0
    vec4 s5 = texture2D(texture, uv + dir.wy);
    vec4 s6 = texture2D(texture, uv + dir.ww);
    vec4 s7 = texture2D(texture, uv + dir.xy);
    vec4 s8 = texture2D(texture, uv + dir.xw);
    //权重为4.0
    mainColor = mainColor * 4.0 + s1 + s2 + s3 + s4 + s5 + s6 + s7 + s8;
    //归一化
    return mainColor*(1.0/16.0);
  }

  void main () {
    vec2 uv = v_uv0;;
    vec4 mainColor = texture2D(texture, uv);   
   
    #if USE_BOXBLUR
      mainColor = BoxBlur(mainColor,uv);  
    #endif

    mainColor *= v_color;

    ALPHA_TEST(mainColor);

    gl_FragColor = mainColor;
  }
}%
